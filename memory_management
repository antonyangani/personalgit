## Managing memory

VALUES

0	= Estimate if we have enough memory to allocate (kernel performs heuristic memory overcommit handling by estimating amount of memory available and deny requests that are too large)
1	= Always say yes when process needs more memory, This increases the possibility of memory overload, but improves performance for memory-intensive tasks
2	= The kernel denies requests for memory equal to or larger than the sum of total available swap space and the percentage of physical RAM specified in overcommit_ratio

-- cat /proc/sys/vm/overcommit_memory

## Checing if you are almost running out of memory

-- grep -iER 'MemTotal|Committed_AS:' /pro/meminfo
-- grep -iER 'MemTotal|Committed_AS:' /pro/meminfo | awk '{print $2 / 1024 / 1024 }'

Ensure that Committed_AS is NOT greated that MemTotal!!!

## Remove Caches/Buffers
# VALUES
= 1	- 	Clear PageCache only  (PageCache is anything the OS would rather have on memory than to read from a file)
= 2	-	clear dentries and inodes (Dentries are datastructures that represent directories  and used to store cache)
= 3	-	clear PageCache, dentries, and inodes
		Inodes are data structures which provide a representation of a file

# Clear PageCache

-- sync; echo 1 > /proc/sys/vm/drop_caches 

# Clear dentries and Inodes

-- sync; echo 2 > /proc/sys/vm/drop_caches 

# Clear PageCache, dentries, and Inodes

-- sync; echo 3 > /proc/sys/vm/drop_caches 

# Enforcing UserSpace Does not COMMIT 50% of memory

-- sync; echo 50 > /proc/sys/vm/overcommit_ratio

# Top command output

-- us: user cpu time (or) % CPU time spent in user space
-- sy: system cpu time (or) % CPU time spent in kernel space
-- ni: user nice cpu time (or) % CPU time spent on low priority processes
-- id: idle cpu time (or) % CPU time spent idle
-- wa: io wait cpu time (or) % CPU time spent in wait (on disk)
-- hi: hardware irq (or) % CPU time spent servicing/handling hardware interrupts
-- si: software irq (or) % CPU time spent servicing/handling software interrupts
-- st: steal time - - % CPU time in involuntary wait by virtual cpu while hypervisor is servicing another processor (or) % CPU time stolen from a virtual machine
